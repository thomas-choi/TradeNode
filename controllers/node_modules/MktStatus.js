// JScript source code
var APL = require('./Log');
var HashO = require('./hash');
var Hash = HashO.CreateHash();
var currMS = new MktStatus('');

function MktStatus(exch, sub) {
    this.exchange = exch;
    this.mopen = false;
    this.subMkt = sub;
    this.time = 0;
    this.name = ''; 
}
MktStatus.prototype.Assign = function(ms) {
    this.mopen = ms.mopen;
    this.subMkt = ms.subMkt;
    this.time = ms.time;
    this.exchange = ms.exchange;
    this.name =  ms.name;    
}
MktStatus.prototype.toString = function(){
    return APL.toStr(this);
}

function getMktStatus(exch, sub) {
    return Hash.getItem(exch+'.'+sub);
}
function setMktStatus(exch, sub) {
    var    td = Hash.getItem(exch+'.'+sub);
    if (!td) {
        td = new MktStatus(exch, sub);
        Hash.setItem(exch+'.'+sub, td);
    }  
    return td;
}

function ParseTime(timestr) {
    var ts = timestr.split(':');  
    var  i,  it =0;
    for (i=0; i < ts.length; i+=1) {
        it = it * 100 + parseFloat(ts[i]);
 //       APL.dump('timestr='+timestr+'    it=' + it.toString() + '   its[i]=' + ts[i]);
    }
    return it; 
}

function Parse(splitPx) {
    var     exch = splitPx[ 1];
    var     tdata = null;

    for (i=2; i < splitPx.length; i+=2) {
        switch (splitPx[i]) {
            case '5': if (splitPx[i+1] == '1') 
                            currMS.mopen = true 
                        else 
                            currMS.mopen = false; 
                        break;
            case '75': currMS.subMkt = splitPx[i+1]; break;
            case '33': currMS.time = ParseTime(splitPx[i+1]); break;
            case '20': currMS.exchange = splitPx[i+1]; break;
            case '25': currMS.name = splitPx[i+1]; break;
            default:;
        }      
    } 
    tdata = Hash.getItem(currMS.exchange, currMS.subMkt);
    if (!tdata) {
        tdata = new MktStatus(currMS.exchange, currMS.subMkt);
        Hash.setItem(currMS.exchange+'.'+currMS.subMkt, tdata);
    }
    tdata.Assign(currMS);
//    APL.dump('Parse line find mktstatus=' +currMS.exchange);
    return tdata;
}

module.exports.Parse = Parse;
module.exports.MktStatus = MktStatus;
module.exports.getMktStatus = getMktStatus;
module.exports.setMktStatus = setMktStatus;
