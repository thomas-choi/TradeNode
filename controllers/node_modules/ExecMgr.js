var net = require('net');
var util = require('util');
var fs = require('fs');
var evt = null;

var APL = require('./Log');
var ORD = require('./Order');
var gateway = null;
var logger = null;
var simMode = true;

function start(port, host, CE, log) { 

    logger = log; 
    gateway = net.connect(port, host, function() {
        logger.info('ExecMgr is connected to ' + host + ':' + port);
	    gateway.setEncoding("utf8");
        simMode = false;
    });
    gateway.on('error', function(e) {
        logger.info('ExecMgr connection error, in simulation mode'); 
        simMode = true;
    });  
    gateway.on('data', function(data) {
         logger.info('ITS return message'+util.inspect(data));
         var order = JSON.parse(data.toString());
         evt.emit('ordack', order); 
    });  
    APL.trade(ORD.ordHeader());
    evt = CE; 
} 

function AckBack(order) {
    logger.info('Confirmed Order='+APL.toStr(order));
    // ack immediately for simulation
    order.status = ORD.STATUS.COMP;
    order.filled = order.qty;
    order.avgPx = order.price;
    order.Time = new Date().toTimeString();
    var   outstr = order.genSStr(',');
    APL.trade(outstr);
    evt.emit('ordack', order);
}

function sendOrder(order) {
    logger.info('sendOrder='+APL.toStr(order));
    if (simMode) 
        AckBack(order)
    else {
        var     sendOrd =  {
            action : 'add',
            ordData : order
        };
        gateway.write(JSON.stringify(sendOrd)); 
    } 
}

module.exports.start = start;
module.exports.submit = sendOrder;
