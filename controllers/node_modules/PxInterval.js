// JScript source code
// Technical Indicator type : (1) Price update by time interval (2) simple direction

var net = require('net');
var util = require('util');
var SM = require('./SubMgr');
var PF = require('./TickData');
var EventEmitter = require('events').EventEmitter;

var Mark = {
    sym : '',
    interval : 0.0 
}

module.exports = new EventEmitter();

function PriceEvent(Price) {
    if (!Mark.mktOpen)
        return;
         
    if (!Mark.inited) {
        APL.log('First Tick:'+APL.toStr(Price));
        Mark.inited = true;
        Mark.high = Price.last;
        Mark.prevPrice = new PF.TickData();
        Mark.prevPrice.Assign(Price);
        APL.log('First prevPrice: ' + APL.toStr(Mark.prevPrice));
        return;
    }    
    var   cTime = Price.time;
    var   pTime = Mark.prevPrice.time;
    var   tdiff = (cTime - pTime) ;  
 
    if (tdiff > currParm.interval) {
        Mark.direction = Price.last - Mark.prevPrice.last;
        APL.log('Time interval up : '+APL.toStr(Mark) + '  curTime= ' + cTime + ' pTime=' + pTime + ' tdiff = ' + tdiff + '  currParm.interval = ' + currParm.interval); 
        if (Mark.openPos) 
            genOpenOrder(Price);
        else 
            genCloseOrder(Price);            
        Mark.prevPrice.Assign(Price);
    }
}
function start(sym, interval) { 
    APL.log('PxInterval Tech Indicator started for ' + sym + ' with interval='+interval.toString());
    Mark.sym = sym;
    Mark.interval = interval;  
    SM.on(Mark.sym, PriceEvent);
}

module.exports.start = start;
